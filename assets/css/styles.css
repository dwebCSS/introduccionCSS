/* todo: Reglas CSS */

/* * 1) Selector  */
/* * 2) {propiedad: valor;} */

/* 
    * selector {
    *   propiedad: valor;
    * }
*/

/* ? Selectores Básicos */

html {
    margin: 0px;
    padding: 0px;
    background-color: #f0f0f0;
}

body {
    margin: 0px;
    padding: 0px;
    background-color: #FFF;
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
    font-weight: normal;
    font-size: 26px;
    color: red;
}

h1 {
    color: blueviolet;
    font-weight: bolder;
    font-size: 32px;
}

h2 {
    color: green;
    font-weight: bold;
    font-size: 24px;
}

p {
    color: brown;
}

/* ? Clases */

.color-primary{
    color: royalblue;
}

.txt-16 {
    font-size: 16px;
}

/* ? Identificadores */

#texto {
    font-size: 20px;
    background-color: gainsboro;
}

#texto {
    color: #FFF;
    background-color: red;
    /* *CSS toma la última propiedad */
    background-color: blueviolet;
}

#h1 {
    color: red;
}

/* ? Atributos */


a[target] {
    text-decoration: none;
}

a[href*="http://"] {
    color: red;
}

a[href*="https://"] {
    color: green;
}

a[href$=".mx/"] {
    font-style: italic;
    color: lightseagreen;
}

/* ? Selectores Avanzados */

/* 
*   <padre>
*       <hijos>
*       <hijos>
*       <hijos>
*   </padre>
*/

.lista {
    background-color: blueviolet;
}

/* * Hijos directos */

.lista > li {
    background-color: yellowgreen;
}

/* .lista li > span{
    background-color: black;
} */

/* .lista > li > span {
    background-color: red;
} */

span {
    color: lightslategray;
}

/* * Hijos descendientes */

.lista span {
    background-color: aquamarine;
    /* color: black; */
}

/* * Hermanos */

/* 
*   <...>
*       <hermano>
*       <hermano>
*       <hermano>
*   </...> 
*/

/* * "~" se aplica a los elementos hermanos que estén por debajo del elemento de la clase */

.item ~ li {
    background-color: blue;
}

/* * "+" se aplica al almento hermano que esté por debajo de la clase */

.item2 + li {
    background-color: gold;
}

.item2 {
    color: azure;
}

/* * Selectores Universales */

* {
    /* background-color: black; */
    box-sizing: border-box;
    scroll-behavior: smooth;
}

.lista * {
    color: darkcyan;
}

/* ? Pseudoclases */

/* * Es una palabra clave que se añade a los selectores y que especifica un estado especial del elemento seleccionado */

button {
    background-color: #05c905;
    color: #000;
    border: none;
    padding: 8px 15px;
    margin-left: 45px;
}

/* * :hover aplicará un estilo cuando el usuario coloque el cursos sobre el elemento*/

button:hover {
    background-color: blueviolet;
    color: #FFF;
    transition: .2s;
}

/* * :active comienza cuando el usuario presiona el botón primario del mouse y termina cuando se suelta */

button:active {
    background-color: black;
    color: lightpink;
}

/* * :visited representa enlaces que el usuario ya ha visitado */

a:visited {
    color: darkgoldenrod;
}

/* * EJEMPLO 1: Pseudoclases | Clase padre */

.padre {
    padding: 0 50px;
}

.padre div:first-child {
    color: red;
}

.padre div:last-child {
    color: lightseagreen;
}

.padre div:nth-child(7) {
    font-size: 25px;
    padding-left: 20px;
}

/* * 1st, 2nd, 3rd, 4th, ..., nth */

.padre div:nth-child(3n) {
    text-decoration: line-through;
}

.padre div:nth-child(4n + 2) {
    font-size: 30px;
}

.padre div:nth-child(even) {
    background-color: gainsboro;
}

.padre div:nth-child(odd) {
    background-color: antiquewhite;
}

/* * EJEMPLO 2: Pseudoclases | Clase father */

.father * {
    color: #000;
    margin: 0;
    padding: 0 50px;
}

.father p:first-of-type {
    color: orangered;
    padding-left: 70px;
}

.father span:last-of-type {
    color: palevioletred;
    padding-left: 85px;
}

.father div:nth-of-type(4) {
    font-size: 36px;
}

.father *:not(div) {
    background-color: gainsboro;
}

/* ? Pseudoelementos */

/* * Permiten añadir estilos a una concreta del documento */

.copy {
    color: #000;
}

/* * Antes */

.copy::before{
    content: "®";
}

/* * Después */

a[target="_blank"]::after {
    content: "↗";
}

.cuento::first-letter {
    font-size: 40px;
    font-family: Arial, Helvetica, sans-serif;
}

::selection {
    background-color: purple;
    color:  beige;
}

.cuento::selection {
    background-color: lightblue;
    color: #000;
}

::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-button {
    box-shadow: inset 0 0 6px darkblue;
}


::-webkit-scrollbar-thumb {
    border-radius: 10px;
    box-shadow: inset 0 0 6px darkblue;
}

/* ? Agrupación de selectores */

.button, .link {
    background-color: white;
    border: 1px solid #999;
    padding: 10px 20px;
}

.button:hover, .link:hover {
    background-color: blue;
    color: azure;
    transition: .5s;
}

.link {
    text-decoration: none;
    color: #000;
    border: none;
}

/* ? Introducción a especificidad */

.btn {
    background-color: white;
    border: 1px solid #999;
    padding: 10px 20px;
}

.btn:hover {
    background-color: blue;
    color: azure;
    transition: .5s;
}

/* 
    * El algoritmo de CSS es la forma en que el navegador aplica los estilos al documento. 

    *1) La Cascada
    *2) La Especificidad
    *3) La Herencia
*/

/* ? Cascada */

/* 
    * La cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta el siguiente orden: 

    *1) Orden de aparación
    * - El User Agent (los estilos por defecto del navegador)
    * - Los estilos del autor

    *2) La Especificidad del selector
    
*/

a.color-black {
    color: red;
}

.color-black {
    color: black !important;
}

.h6 {
    color: darkmagenta;
    color: darkorange;
    color: #000;
}

/* * La especificidad se calcula de la siguente forma: */

/* 
    * Etiquetas y pseudoelementos ------ 0, 0, 0, 1
    * Clases, atributos y pseudoclases - 0, 0, 1, 0
    * Identificadores ------------------ 0, 1, 0, 0
    * Estilos en línea ----------------- 1, 0, 0, 0
    ! !important rompe la especifidad
*/

/* ? Introducción a Herencia */

/* * La Herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros más cercanos. Para aplicar se usa el valor inherit, si queremos evitarla podemos asignar otros valor o inicializar la propiedad en cuestión */

.caja{
    border: 1px solid;
    width: 300px;
    height: 200px;
    font-size: 80px;
}

.titulo{
    /* font-size: inherit; */
    /* font-size: 14px; */
    /* * "initial" deha el valor por defecto */
    font-size: initial;
    color: initial;
    background-color: #d3d2d2;
    /* * "inherit" forza alguna propiedad del padre */
    height: inherit;
}

/* ? Modelo de Caja */

/* 
    * Es la forma en que CSS ve a los elementos HTML y los ve como si fueran cajas con las siguientes propiedades:

    *1. Contenido (content)
    *2. Relleno (padding)
    *3. Borde (border)mor
    *4. Margen (margin)
*/

.box {
    padding: 20px;
    border: 5px solid;
    margin: 20px;
    width: 300px;
}

.box1, .box2 {
    font-size: 12px;
    border: 2px solid;
    padding: 20px;
    margin: 10px 20px 50px 70px;
    /* * top, right, bottom, left */
    margin: 10px 10px 10px;
    /* * top, x, bottom */
    margin: 10px 10px;
    /* * y, x */
    margin: 10px;
    /* * todas las direcciones */
    margin-top: 40px;
    margin-right: 100px;
    margin-bottom: 200px;
    margin-left: 40px;
    margin: 20px 40px 20px;
    width: 200px;
}

.box2 {
    box-sizing: border-box;
    box-sizing: content-box;
}

/* * content box: 200px + (20px * 2) + (2px * 2) */

/* 
    * border-box: 200px de ancho
    *content: 200px - (20px * 2) - (2px * 2)
    
*/

/* ? Cajas en bloque y en línea */

.block,
.inline,
.inline-block {
    border: 3px solid;
    width: 300px;
    height: 200px;
    color: initial;
}

/* ? Cajas de bloque */

/*
    *- Ocupan todo el ancho disponible, lo que genera saltos de línea
    *- Si puedes aplicarle un ancho y un alto
    *- No permiten elementos a su lado
    
*/

.block {
    /* display: block; */
    display: inline;
    display: block;
}

/* ? Cajas en línea */

/*
    *- Ocupan el espacio necesario para mostrar su contenido
    *- No permiten aplicarles un ancho y un alto
    *- Permiten otros elementos a su lado
*/

.inline {
    display: block;
    display: inline;
    /* padding: 20px; */
    /* margin: 20px; */
}

.inline-block{
    display: block;
    display: inline;
    display: inline-block;
}